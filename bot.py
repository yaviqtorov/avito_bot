import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from parser import check_new_ads

BOT_TOKEN = "7842845343:AAGCffg57oYZMSpw0X2iyjdQtBt2oVBl220"  # –≤—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω –æ—Ç @BotFather

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–º —Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_links = {}

@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É —Å –ê–≤–∏—Ç–æ, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å.")

@dp.message(Command("check"))
async def check_command(message: types.Message):
    user_id = message.from_user.id
    if user_id not in user_links:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É —Å –ê–≤–∏—Ç–æ!")
        return

    url = user_links[user_id]
    await message.answer("üîç –ü—Ä–æ–≤–µ—Ä—è—é –æ–±—ä—è–≤–ª–µ–Ω–∏—è...")

    ads = await asyncio.to_thread(check_new_ads, url)

    if ads:
        for ad in ads:
            await message.answer(f"üìå {ad['title']}\nüí∞ {ad['price']}\nüîó {ad['url']}")
    else:
        await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏–π.")

@dp.message()
async def save_link(message: types.Message):
    text = message.text.strip()
    if text.startswith("https://avito.ru") or text.startswith("https://www.avito.ru") or text.startswith("https://m.avito.ru"):
        user_links[message.from_user.id] = text
        await message.answer("‚úÖ –°—Å—ã–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ /check")
    else:
        await message.answer("‚ö† –û—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –ê–≤–∏—Ç–æ (m.avito.ru –∏–ª–∏ www.avito.ru).")


async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
